package com.RestApi.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity                    //@Entity annotation specifies that this Java class is mapped to the database table
@Table(name="Employee")    //@Table with the help of the property name specifies which particular table this class is mapped
public class Employee
{
@Id                       //@Id on a field tells Spring Boot that this particular field is the primary key in the table
@GeneratedValue(strategy=GenerationType.IDENTITY)  //@GeneratedValue specifies the strategy that will be used for generating primary keys.
@Column(name="emp_id")	
private Long id;

@Column(name="first_name")
private String first_name;

@Column(name="last_name")
private String last_name;

//@Column on each Java instance variable allows defining a set of properties like name, length etc.
// The name property will be the name of the field in the database table that this instance variable will map to.

@Column(name="email")
private String email;


//-------- getter method ------------------
//-------- setter method ------------------

public Long getId() {
	return id;
}

public void setId(Long id) {
	this.id = id;
}

public String getFirst_name() {
	return first_name;
}

public void setFirst_name(String first_name) {
	this.first_name = first_name;
}

public String getLast_name() {
	return last_name;
}

public void setLast_name(String last_name) {
	this.last_name = last_name;
}

public String getEmail() {
	return email;
}

public void setEmail(String email) {
	this.email = email;
}








}

/*
GenerationType.AUTO - This is the default strategy used by Spring Boot. If you use this strategy, the JPA provider will decide on an appropriate strategy to generate the primary key depending on the dialect given in the application.properties file.
GenerationType.IDENTITY - this strategy uses the database identity column to determine the primary key strategy. For example, you defined the emp_id column as auto-increment in the database while creating the employee table. Now when u use this strategy then a unique primary key is generated by starting from 1 and incrementing every time a new row is inserted in the table.
GenerationType.SEQUENCE - this strategy uses database sequence to generate the primary keys.
GenerationType.TABLE - this strategy uses a database table to generate primary keys.


*/
